<?xml version="1.0"?>
<robot name="tank_bot" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Define robot constants -->
  <xacro:property name="base_width" value="0.40"/>
  <xacro:property name="base_length" value="0.60"/>
  <xacro:property name="base_height" value="0.15"/>
  
  <xacro:property name="track_width" value="0.10"/>
  <xacro:property name="track_length" value="${base_length}"/>
  <xacro:property name="track_height" value="0.05"/>
  
  <xacro:property name="shovel_width" value="0.45"/>
  <xacro:property name="shovel_height" value="0.15"/>
  <xacro:property name="shovel_depth" value="0.05"/>
  
  <!-- Define some commonly used inertial properties -->
  <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>      
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0" />      
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/> 
    </inertial>
  </xacro:macro>
  
  <!-- Robot Base -->
  <link name="base_link">
    <visual>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <material name="DarkGrey">
        <color rgba="0.3 0.3 0.3 1.0"/>
      </material>
    </visual>

    <collision>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>

    <xacro:box_inertia m="15" w="${base_width}" d="${base_length}" h="${base_height}"/>
  </link>
  
  <!-- Robot Footprint -->
  <link name="base_footprint">
    <xacro:box_inertia m="0.001" w="0.001" d="0.001" h="0.001"/>
  </link>

  <joint name="base_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_footprint"/>
    <origin xyz="0.0 0.0 ${-base_height/2 - 0.01}" rpy="0 0 0"/>
  </joint>

  <!-- Tank Tracks -->
  <xacro:macro name="track" params="prefix side_reflect">
    <link name="${prefix}_link">
      <visual>
        <origin xyz="0 ${side_reflect*(base_width/2 + track_width/2)} ${-base_height/4}" rpy="0 0 0"/>
        <geometry>
          <box size="${track_length} ${track_width} ${track_height}"/>
        </geometry>
        <material name="Black">
          <color rgba="0.1 0.1 0.1 1.0"/>
        </material>
      </visual>

      <collision>
        <origin xyz="0 ${side_reflect*(base_width/2 + track_width/2)} ${-base_height/4}" rpy="0 0 0"/> 
        <geometry>
          <box size="${track_length} ${track_width} ${track_height}"/>
        </geometry>
      </collision>

      <xacro:box_inertia m="5.0" w="${track_width}" d="${track_length}" h="${track_height}"/>
    </link>

    <joint name="${prefix}_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${prefix}_link"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro>

  <!-- Left and Right Tracks -->
  <xacro:track prefix="left_track" side_reflect="1" />
  <xacro:track prefix="right_track" side_reflect="-1" />

  <!-- Shovel Linear Actuator -->
  <link name="actuator_link">
    <visual>
      <origin xyz="${base_length/2 + 0.05} 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.02" length="0.15"/>
      </geometry>
      <material name="Silver">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </visual>
    
    <collision>
      <origin xyz="${base_length/2 + 0.05} 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.02" length="0.15"/>
      </geometry>
    </collision>
    
    <xacro:cylinder_inertia m="1.0" r="0.02" h="0.15"/>
  </link>
  
  <joint name="actuator_joint" type="fixed">
    <parent link="base_link"/>
    <child link="actuator_link"/>
    <origin xyz="0 0 0" rpy="0 ${pi/2} 0"/>
  </joint>
  
  <!-- Shovel -->
  <link name="shovel_link">
    <visual>
      <origin xyz="0 0 ${-shovel_height/2}" rpy="0 0 0"/>
      <geometry>
        <box size="${shovel_depth} ${shovel_width} ${shovel_height}"/>
      </geometry>
      <material name="Orange">
        <color rgba="1.0 0.5 0.0 1.0"/>
      </material>
    </visual>
    
    <collision>
      <origin xyz="0 0 ${-shovel_height/2}" rpy="0 0 0"/>
      <geometry>
        <box size="${shovel_depth} ${shovel_width} ${shovel_height}"/>
      </geometry>
    </collision>
    
    <xacro:box_inertia m="2.0" w="${shovel_width}" d="${shovel_depth}" h="${shovel_height}"/>
  </link>
  
  <joint name="shovel_joint" type="prismatic">
    <parent link="actuator_link"/>
    <child link="shovel_link"/>
    <origin xyz="${base_length/2 + 0.15} 0 0" rpy="0 0 0"/>
    <axis xyz="1 0 0"/>
    <limit lower="0" upper="0.3" effort="100" velocity="0.1"/>
    <dynamics damping="50.0" friction="1.0"/>
  </joint>
  
  <!-- Depth Camera (RealSense D435) -->
  <xacro:include filename="$(find realsense2_description)/urdf/_d435.urdf.xacro" />
  
  <xacro:sensor_d435 parent="base_link" name="camera" use_nominal_extrinsics="true">
    <origin xyz="${base_length/2 - 0.05} 0 ${base_height/2 + 0.05}" rpy="0 0 0"/>
  </xacro:sensor_d435>
  
  <!-- IMU Sensor -->
  <link name="imu_link">
    <visual>
      <geometry>
        <box size="0.05 0.05 0.02"/>
      </geometry>
      <material name="Blue">
        <color rgba="0.0 0.0 0.8 1.0"/>
      </material>
    </visual>
    
    <collision>
      <geometry>
        <box size="0.05 0.05 0.02"/>
      </geometry>
    </collision>
      
    <xacro:box_inertia m="0.01" w="0.05" d="0.05" h="0.02"/>
  </link>
    
  <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin xyz="0 0 ${base_height/2 + 0.01}" rpy="0 0 0"/>
  </joint>
  
  <!-- Gazebo plugins for simulation -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/tank_bot</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>
  
  <!-- Track controllers for differential drive -->
  <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <updateRate>50</updateRate>
      <leftJoint>left_track_joint</leftJoint>
      <rightJoint>right_track_joint</rightJoint>
      <wheelSeparation>${base_width + track_width}</wheelSeparation>
      <wheelDiameter>${track_height * 2}</wheelDiameter>
      <wheelAcceleration>1.0</wheelAcceleration>
      <wheelTorque>50</wheelTorque>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_link</robotBaseFrame>
      <publishWheelTF>true</publishWheelTF>
      <publishOdomTF>true</publishOdomTF>
      <publishWheelJointState>true</publishWheelJointState>
      <legacyMode>false</legacyMode>
      <odometrySource>world</odometrySource>
      <publishTf>true</publishTf>
    </plugin>
  </gazebo>
  
  <!-- IMU sensor plugin -->
  <gazebo reference="imu_link">
    <sensor name="imu_sensor" type="imu">
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <ros>
          <namespace>/tank_bot</namespace>
          <remapping>~/out:=imu</remapping>
        </ros>
        <initial_orientation_as_reference>false</initial_orientation_as_reference>
      </plugin>
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <imu>
        <angular_velocity>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </z>
        </angular_velocity>
        <linear_acceleration>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </z>
        </linear_acceleration>
      </imu>
    </sensor>
  </gazebo>
  
  <!-- Shovel actuator controller -->
  <gazebo>
    <plugin name="gazebo_ros_joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
      <jointName>shovel_joint</jointName>
      <updateRate>50</updateRate>
    </plugin>
  </gazebo>
  
  <gazebo>
    <plugin name="gazebo_ros_joint_pose_trajectory" filename="libgazebo_ros_joint_pose_trajectory.so">
      <updateRate>50</updateRate>
    </plugin>
  </gazebo>
  
  <!-- Material properties for better visualization -->
  <gazebo reference="base_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  
  <gazebo reference="left_track_link">
    <material>Gazebo/Black</material>
    <mu1>0.9</mu1>
    <mu2>0.9</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>
  
  <gazebo reference="right_track_link">
    <material>Gazebo/Black</material>
    <mu1>0.9</mu1>
    <mu2>0.9</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>
  
  <gazebo reference="shovel_link">
    <material>Gazebo/Orange</material>
    <mu1>0.5</mu1>
    <mu2>0.5</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>
</robot>