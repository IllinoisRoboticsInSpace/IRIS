<?xml version="1.0"?>
<robot name="differential_robot" xmlns:xacro="http://ros.org/wiki/xacro">
    <!-- Define robot constants -->
    <xacro:property name="base_width" value="0.31"/><!-- Along x axis -->
    <xacro:property name="base_length" value="0.42"/><!-- Along y axis -->
    <xacro:property name="base_height" value="0.18"/><!-- Along z axis -->

    <xacro:property name="wheel_radius" value="0.10"/>
    <xacro:property name="wheel_width" value="0.04"/>
    <xacro:property name="wheel_to_chassis_gap" value="0.025"/><!-- Along x axis -->
    <xacro:property name="wheel_zoff" value="0.05"/>
    <xacro:property name="wheel_xoff" value="0.12"/>  <!-- 0.12 -->
    <xacro:property name="wheel_ygap" value="0.12"/>

    <xacro:property name="caster_xoff" value="0.14"/>

    <xacro:property name="wheel_seperation" value="0.14"/>

    <!-- Robot Base -->
    <link name="base_link">
        <visual>
        <geometry>
            <box size="${base_length} ${base_width} ${base_height}"/>
        </geometry>
        <material name="UIUCBlue">
            <color rgba=".19 .41 .75 1.0"/>
        </material>
        </visual>
    </link>

    <!-- Robot Footprint -->
    <link name="base_footprint"/>

    <joint name="base_joint" type="fixed">
        <parent link="base_link"/>
        <child link="base_footprint"/>
        <origin xyz="0.0 0.0 ${-(wheel_radius+wheel_zoff)}" rpy="0 0 0"/>
    </joint>

    <!-- Wheels -->
    <xacro:macro name="wheel" params="prefix x_reflect y_reflect">
        <link name="${prefix}_link">
        <visual>
            <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
            </geometry>
            <material name="Gray">
            <color rgba="0.5 0.5 0.5 1.0"/>
            </material>
        </visual>
        </link>

        <joint name="${prefix}_joint" type="continuous">
        <parent link="base_link"/>
        <child link="${prefix}_link"/>
        <origin xyz="${x_reflect*wheel_xoff} ${y_reflect*(base_width/2+wheel_ygap)} ${-wheel_zoff}" rpy="0 0 0"/>
        <axis xyz="0 1 0"/>
        </joint>
    </xacro:macro>

    <xacro:wheel prefix="drivewhl_l" x_reflect="-1" y_reflect="1" />
    <xacro:wheel prefix="drivewhl_r" x_reflect="-1" y_reflect="-1" />
<link name="lidar_link">
  <inertial>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <mass value="0.125"/>
    <inertia ixx="0.001"  ixy="0"  ixz="0" iyy="0.001" iyz="0" izz="0.001" />
  </inertial>

  <collision>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <geometry>
       <cylinder radius="0.0508" length="0.055"/>
    </geometry>
  </collision>

  <visual>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <geometry>
       <cylinder radius="0.0508" length="0.055"/>
    </geometry>
  </visual>
</link>

<joint name="lidar_joint" type="fixed">
  <parent link="base_link"/>
  <child link="lidar_link"/>
  <origin xyz="0 0 0.12" rpy="0 0 0"/>
</joint>

<gazebo reference="lidar_link">
  <sensor name="lidar" type="ray">
    <always_on>true</always_on>
    <visualize>true</visualize>
    <update_rate>5</update_rate>
    <ray>
      <scan>
        <horizontal>
          <samples>360</samples>
          <resolution>1.000000</resolution>
          <min_angle>0.000000</min_angle>
          <max_angle>6.280000</max_angle>
        </horizontal>
      </scan>
      <range>
        <min>0.120000</min>
        <max>3.5</max>
        <resolution>0.015000</resolution>
      </range>
      <noise>
        <type>gaussian</type>
        <mean>0.0</mean>
        <stddev>0.01</stddev>
      </noise>
    </ray>
    <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
      <ros>
        <remapping>~/out:=scan</remapping>
      </ros>
      <output_type>sensor_msgs/LaserScan</output_type>
      <frame_name>lidar_link</frame_name>
    </plugin>
  </sensor>
</gazebo>
</robot>